"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.assertIsHexString = exports.assertIsArray = exports.assertIsPositiveInt = exports.assertIsInt = exports.assertIsNumber = exports.assertIsString = exports.assertIsBuffer = void 0;
const external_1 = require("../external");
const type_1 = require("./type");
const assertIsBuffer = (input, msg = undefined) => external_1.assert(type_1.isBuffer(input), msg || `Only supports Buffer but input was: ${input}`);
exports.assertIsBuffer = assertIsBuffer;
const assertIsString = (input, msg = undefined) => external_1.assert(type_1.isString(input), msg || `Only supports strings but input was: ${input}`);
exports.assertIsString = assertIsString;
const assertIsArray = (input, msg = undefined) => external_1.assert(type_1.isArray(input), msg || `Only supports number arrays but input was: ${input}`);
exports.assertIsArray = assertIsArray;
const assertIsNumber = (input, msg = undefined) => external_1.assert(type_1.isNumber(input), msg || `Only supports number but input was: ${input}`);
exports.assertIsNumber = assertIsNumber;
const assertIsInt = (input, msg = undefined) => external_1.assert(type_1.isInteger(input), msg || `Only supports integer number but input was: ${input}`);
exports.assertIsInt = assertIsInt;
const assertIsPositiveInt = (input, msg = undefined) => external_1.assert(type_1.isInteger(input) && 0 <= input, msg || `Only supports positive integer number but input was: ${input}`);
exports.assertIsPositiveInt = assertIsPositiveInt;
const assertIsHexString = (input, msg = undefined) => external_1.assert(type_1.isHexString(input), msg || `Only supports 0x-prefixed hex strings but input was: ${input}`);
exports.assertIsHexString = assertIsHexString;
