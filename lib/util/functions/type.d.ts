/// <reference types="node" />
declare const isNumber: (number: unknown) => boolean, isInteger: (number: unknown) => boolean, isArray: (arg: any) => arg is any[], isBuffer: (obj: any) => obj is Buffer, hasProps: (o: any) => boolean, isString: (s: any) => boolean, isObject: (o: any) => boolean, isDictionary: (o: any) => boolean, isStringCoercible: (x: any) => any, isHexString: (value: string, length?: number) => boolean;
declare const prop: (o: any, k: any) => any;
declare const asFloat: (x: any) => number, asInteger: (x: any) => number;
declare const safeFloat: (o: any, k: any, $default: any, n?: number) => any, safeInteger: (o: any, k: any, $default: any, n?: number) => any, safeIntegerProduct: (o: any, k: any, $factor: any, $default: any, n?: number) => any, safeTimestamp: (o: any, k: any, $default: any, n?: number) => any, safeValue: (o: any, k: any, $default: any, x?: any) => any, safeString: (o: any, k: any, $default: any, x?: any) => any, safeStringLower: (o: any, k: any, $default: any, x?: any) => any, safeStringUpper: (o: any, k: any, $default: any, x?: any) => any, safeFloat2: (o: any, k1: any, k2: any, $default: any, n?: number) => any, safeInteger2: (o: any, k1: any, k2: any, $default: any, n?: number) => any, safeIntegerProduct2: (o: any, k1: any, k2: any, $factor: any, $default: any, n?: number) => any, safeTimestamp2: (o: any, k1: any, k2: any, $default: any, n?: number) => any, safeValue2: (o: any, k1: any, k2: any, $default: any, x?: any) => any, safeString2: (o: any, k1: any, k2: any, $default: any, x?: any) => any, safeStringLower2: (o: any, k1: any, k2: any, $default: any, x?: any) => any, safeStringUpper2: (o: any, k1: any, k2: any, $default: any, x?: any) => any;
export { isNumber, isInteger, isArray, isBuffer, isObject, isString, isStringCoercible, isHexString, isDictionary, hasProps, prop, asFloat, asInteger, safeFloat, safeInteger, safeIntegerProduct, safeTimestamp, safeValue, safeString, safeStringLower, safeStringUpper, safeFloat2, safeInteger2, safeIntegerProduct2, safeTimestamp2, safeValue2, safeString2, safeStringLower2, safeStringUpper2, };
